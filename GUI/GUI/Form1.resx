<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>