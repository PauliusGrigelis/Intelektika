<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>